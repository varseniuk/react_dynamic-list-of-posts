{"version":3,"sources":["components/PostsList/PostsList.jsx","api/api.js","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","api/posts.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["PostsList","posts","setPostId","selectedPostId","className","map","post","key","id","userId","title","type","onClick","postID","BASE_URL","getPostComments","postId","a","fetch","comments","json","response","data","preparedComments","filter","comment","addPostComment","name","email","body","url","options","method","JSON","stringify","deletePostComment","commentId","NewCommentForm","useState","setName","setEmail","setBody","onSubmit","event","preventDefault","placeholder","value","onChange","target","getUserPosts","preparedPosts","getPostDetails","details","preparedDetails","PostDetails","selectedDetails","setSelectedDetails","setComments","isHidden","setIsHidden","useEffect","then","result","length","App","setPosts","setSelectedPostId","handleChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08395b43.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\n\nexport const PostsList = ({ posts, setPostId, selectedPostId }) => {\n  const handleClick = (postID) => {\n    if (selectedPostId === postID) {\n      setPostId(0);\n    } else {\n      setPostId(postID);\n    }\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li key={post.id} className=\"PostsList__item\">\n            <div>\n              <b>{`[User #${post.userId}]: `}</b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => {\n                handleClick(post.id);\n              }}\n            >\n              {selectedPostId === post.id ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      userId: PropTypes.number.isRequired,\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      body: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  setPostId: PropTypes.func.isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n};\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport const getPostComments = async(postId) => {\n  const comments = await fetch(`${BASE_URL}/comments/`);\n  const response = await comments.json();\n  const preparedComments = await response.data;\n\n  return preparedComments.filter(comment => comment.postId === postId);\n};\n\nexport const addPostComment = async(postId, name, email, body) => {\n  const url = `${BASE_URL}/comments/`;\n  const options = {\n    method: 'POST',\n    body: JSON.stringify({\n      postId, name, email, body,\n    }),\n  };\n\n  return fetch(url, options);\n};\n\nexport const deletePostComment = async(commentId) => {\n  const url = `${BASE_URL}/comments/${commentId}`;\n  const options = {\n    method: 'DELETE',\n  };\n\n  const comments = await fetch(url, options);\n  const response = await comments.json();\n  const preparedComments = await response.data;\n\n  return preparedComments;\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewCommentForm.scss';\nimport { addPostComment } from '../../api/comments';\n\nexport const NewCommentForm = ({ postId }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    addPostComment(postId, name, email, body);\n\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form className=\"NewCommentForm\" onSubmit={handleSubmit}>\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={event => setName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={event => setEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={event => setBody(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import { BASE_URL } from './api';\n\nexport const getUserPosts = async(userId) => {\n  const posts = await fetch(`${BASE_URL}/posts/`);\n  const response = await posts.json();\n  const preparedPosts = await response.data;\n\n  if (userId === 0) {\n    return preparedPosts;\n  }\n\n  return preparedPosts.filter(post => post.userId === userId);\n};\n\nexport const getPostDetails = async(postId) => {\n  const details = await fetch(`${BASE_URL}/posts/${postId}`);\n  const response = await details.json();\n  const preparedDetails = await response.data;\n\n  return preparedDetails;\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, deletePostComment } from '../../api/comments';\n\nexport const PostDetails = ({ selectedPostId }) => {\n  const [selectedDetails, setSelectedDetails] = useState(null);\n  const [comments, setComments] = useState(null);\n  const [isHidden, setIsHidden] = useState(false);\n\n  useEffect(() => {\n    getPostDetails(selectedPostId)\n      .then(details => setSelectedDetails(details));\n\n    getPostComments(selectedPostId)\n      .then(result => setComments(result));\n  }, [selectedPostId, comments]);\n\n  const hide = () => {\n    setIsHidden(!isHidden);\n  };\n\n  return (\n    selectedDetails && (\n      <div className=\"PostDetails\">\n        <h2>Post details:</h2>\n\n        <section className=\"PostDetails__post\">\n          <h3>{selectedDetails.title}</h3>\n          <p>{selectedDetails.body}</p>\n        </section>\n\n        <section className=\"PostDetails__comments\">\n          {!comments.length || (\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={hide}\n            >\n              {`${isHidden ? 'Show' : 'Hide'} ${comments.length} comments`}\n            </button>\n          )}\n          {isHidden || (\n            <ul className=\"PostDetails__list\">\n              {comments.map(comment => (\n                <li className=\"PostDetails__list-item\">\n                  <button\n                    type=\"button\"\n                    className=\"PostDetails__remove-button button\"\n                    onClick={() => deletePostComment(comment.id)}\n                  >\n                    X\n                  </button>\n                  <p>{comment.body}</p>\n                </li>\n              ))}\n            </ul>\n          )}\n        </section>\n\n        <section>\n          <div className=\"PostDetails__form-wrapper\">\n            <NewCommentForm\n              postId={selectedPostId}\n            />\n          </div>\n        </section>\n      </div>\n    )\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts } from './api/posts';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  useEffect(() => {\n    getUserPosts(0)\n      .then(result => setPosts(result));\n  }, []);\n\n  const handleChange = async(userId) => {\n    const result = await getUserPosts(userId);\n\n    setPosts(result);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={event => handleChange(+event.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            setPostId={setSelectedPostId}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails\n            selectedPostId={selectedPostId}\n          />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}